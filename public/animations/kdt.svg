<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 100" preserveAspectRatio="none">
  <style>
    .background {
      fill: rgb(25, 25, 25);
    }
    .point {
      fill: white;
      opacity: 0;
      animation: fadeInOut 8s ease-in-out infinite;
    }
    .line {
      stroke: white;
      stroke-width: 0.5;
      stroke-dasharray: 200;
      stroke-dashoffset: 200;
      animation: drawLine 2s ease-in-out forwards;
    }

    /* Line animations */
    @keyframes drawLine {
      to {
        stroke-dashoffset: 0;
      }
    }

    /* Point fade in/out animations */
    @keyframes fadeInOut {
      0%, 5% {
        opacity: 0;
      }
      5%, 95% {
        opacity: 1;
      }
      100% {
        opacity: 0;
      }
    }
  </style>

  <!-- Background -->
  <rect class="background" width="100%" height="100%" />

  <!-- Animated Lines -->
  <!-- First vertical split -->
  <line class="line" x1="100" y1="0" x2="100" y2="100" style="animation-delay: 0s;" />
  <!-- Second horizontal split -->
  <line class="line" x1="0" y1="50" x2="200" y2="50" style="animation-delay: 0.5s;" />
  <!-- Third vertical split in the left region -->
  <line class="line" x1="50" y1="0" x2="50" y2="50" style="animation-delay: 1s;" />
  <!-- Fourth vertical split in the right region -->
  <line class="line" x1="150" y1="50" x2="150" y2="100" style="animation-delay: 1.5s;" />

  <g id="points"></g>

  <script type="application/ecmascript">
    <![CDATA[
      (function () {
        const svgDoc = document.currentScript.ownerDocument;
        const pointsGroup = svgDoc.querySelector("#points");
        const numPoints = 20; // Max number of points
        const width = 200; // SVG width
        const height = 100; // SVG height

        // Function to create a random point
        function createRandomPoint() {
          const x = Math.random() * width;
          const y = Math.random() * height;
          const duration = Math.random() * 8 + 4; // Random lifetime between 4-12 seconds

          const point = document.createElementNS("http://www.w3.org/2000/svg", "circle");
          point.setAttribute("cx", x);
          point.setAttribute("cy", y);
          point.setAttribute("r", 1.5); // Fixed point radius
          point.setAttribute("class", "point");
          point.style.animationDuration = `${duration}s`;

          pointsGroup.appendChild(point);

          // Remove the point after its animation ends
          setTimeout(() => {
            if (pointsGroup.contains(point)) {
              pointsGroup.removeChild(point);
            }
          }, duration * 1000);
        }

        // Function to spawn points at random intervals
        function spawnPoints() {
          if (pointsGroup.childNodes.length < numPoints) {
            createRandomPoint();
          }
          setTimeout(spawnPoints, Math.random() * 1000); // Random interval between spawns (up to 1 second)
        }

        // Start spawning points
        spawnPoints();
      })();
    ]]>
  </script>
</svg>
